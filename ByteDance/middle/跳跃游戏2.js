// 跳跃游戏2
/**
 * 给你一个非负整数数组 nums ，你最初位于数组的第一个位置。
 * 数组中的每个元素代表你在该位置可以跳跃的最大长度。
 * 你的目标是使用最少的跳跃次数到达数组的最后一个位置。
 * 假设你总是可以到达数组的最后一个位置。
 */

// 以最小的步数增加最大的覆盖范围，直到覆盖范围覆盖了终点，这个范围内最小步数一定可以跳到，
// 不用管具体是怎么跳的，不纠结于一步究竟跳一个单位还是两个单位。
// 移动下标只要遇到当前覆盖最远距离的下标，直接步数加一，然后更新当前覆盖最远距离的下标
function jump(nums) {
  let curIndex = 0; // 当前覆盖最远距离的下标
  let nextIndex = 0; // 下一步覆盖的最远距离
  let steps = 0; // 记录走的次数
  for (let i = 0; i < nums.length - 1; i++) {
    nextIndex = Math.max(nums[i] + i, nextIndex); // 下一步覆盖的最远距离
    if (i == curIndex) {
      // 当i走到了当前覆盖的最远距离，说明要走一步了
      curIndex = nextIndex; // 更新当前覆盖的最远距离的下标
      steps++; // 步数加1
    }
  }
  return steps;
}

console.log(jump([2,3,1,1,4]))