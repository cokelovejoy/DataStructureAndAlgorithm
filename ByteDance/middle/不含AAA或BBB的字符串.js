// 给定两个整数A和B，返回任意字符串S，要求满足：
// S的长度为A+B，且正好包含A个‘a’字母与B个‘b’字母；
// 子串‘aaa’, 子串‘bbb’没有出现在S中。

// 思路 贪心
// 先选择当前所剩最多的待写字母写入字符串中。
// 举一个例子，如果 A = 6, B = 2，那么我们期望写出 'aabaabaa'。
// 进一步说，设当前所剩最多的待写字母为 x，只有前两个已经写下的字母都是 x 的时候，下一个写入字符串中的字母才不应该选择它。
// A, B：待写的 'a' 与 'b' 的数量。
// 设当前还需要写入字符串的 'a' 与 'b' 中较多的那一个为 x，如果我们已经连续写了两个 x 了，下一次我们应该写另一个字母。否则，我们应该继续写 x。

function strWithout3a3b(A, B) {
  let ans = "";// 写入的字符串
  while (A > 0 || B > 0) {
    let writeA = false;
    let len = ans.length;
    // 每次循环内部需要判断是否需要写入a
    // ans中字符长度大于等于2时，并且最后两个字符相等
    if (len >= 2 && ans[len - 1] == ans[len - 2]) {
      if (ans[len - 1] == "b") {
        // 并且最后一个字符为b，就切换为写入a字符
        writeA = true;
      }
    } else {
      // ans 中字符长度小于2时，并且A的数量要大于B的数量时，要切换为写入a
      // ans中字符长度大于2时，但是最后两个字符不相等，根据A的数量是否大于B的数量，判断是否写入a。
      if (A >= B) {
        writeA = true;
      }
    }
    // 写入a ，A数量减少，
    if (writeA) {
      A--;
      ans += "a";
    } else {
      // 写入b，B数量减少
      B--;
      ans += "b";
    }
  }
  return ans;
}
